var _user$project$Users$updateStats = F2(
	function ($int, stats) {
		var _p0 = $int;
		switch (_p0) {
			case 1:
				return {success: stats.success + 1, failed: stats.failed};
			case 0:
				return {success: stats.success, failed: stats.failed + 1};
			default:
				return {success: stats.success, failed: stats.failed};
		}
	});
var _user$project$Users$update = F2(
	function (msg, model) {
		var _p1 = msg;
		switch (_p1.ctor) {
			case 'UsernameInput':
				return _elm_lang$core$Native_Utils.update(
					model,
					{username: _p1._0});
			case 'PasswordInput':
				return _elm_lang$core$Native_Utils.update(
					model,
					{password: _p1._0});
			default:
				var password = _elm_lang$core$Native_Utils.eq(model.password, 'locomoto');
				var username = _elm_lang$core$Native_Utils.eq(model.username, 'Martin');
				return (username && password) ? _elm_lang$core$Native_Utils.update(
					model,
					{
						loggedIn: {ctor: '_Tuple2', _0: true, _1: 'You are logged in :)'},
						username: '',
						password: '',
						stats: A2(_user$project$Users$updateStats, 1, model.stats)
					}) : _elm_lang$core$Native_Utils.update(
					model,
					{
						loggedIn: {ctor: '_Tuple2', _0: false, _1: 'Wrong credentials'},
						username: '',
						password: '',
						stats: A2(_user$project$Users$updateStats, 0, model.stats)
					});
		}
	});
var _user$project$Users$initModel = {
	username: '',
	password: '',
	loggedIn: {ctor: '_Tuple2', _0: false, _1: 'Please insert your credentials'},
	stats: {success: 0, failed: 0}
};
var _user$project$Users$Statistics = F2(
	function (a, b) {
		return {success: a, failed: b};
	});
var _user$project$Users$Model = F4(
	function (a, b, c, d) {
		return {username: a, password: b, loggedIn: c, stats: d};
	});
var _user$project$Users$Login = {ctor: 'Login'};
var _user$project$Users$PasswordInput = function (a) {
	return {ctor: 'PasswordInput', _0: a};
};
var _user$project$Users$UsernameInput = function (a) {
	return {ctor: 'UsernameInput', _0: a};
};
var _user$project$Users$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$h4,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Users')
					])),
				A2(
				_elm_lang$html$Html$input,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$type$('text'),
						_elm_lang$html$Html_Attributes$placeholder('username'),
						_elm_lang$html$Html_Attributes$value(model.username),
						_elm_lang$html$Html_Events$onInput(_user$project$Users$UsernameInput)
					]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				A2(
				_elm_lang$html$Html$input,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$type$('password'),
						_elm_lang$html$Html_Attributes$placeholder('password'),
						_elm_lang$html$Html_Attributes$value(model.password),
						_elm_lang$html$Html_Events$onInput(_user$project$Users$PasswordInput)
					]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				A2(
				_elm_lang$html$Html$input,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$type$('submit'),
						_elm_lang$html$Html_Attributes$value('Login'),
						_elm_lang$html$Html_Events$onClick(_user$project$Users$Login),
						_elm_lang$html$Html_Events$onSubmit(_user$project$Users$Login)
					]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('message')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$p,
						_elm_lang$core$Native_List.fromArray(
							[]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text(
								_elm_lang$core$Basics$snd(model.loggedIn))
							])),
						A2(
						_elm_lang$html$Html$hr,
						_elm_lang$core$Native_List.fromArray(
							[]),
						_elm_lang$core$Native_List.fromArray(
							[]))
					]))
			]));
};
