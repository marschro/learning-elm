var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$initModel = {
	id: 0,
	joke: 'Fetching joke...',
	categories: _elm_lang$core$Native_List.fromArray(
		[])
};
var _user$project$Main$Response = F3(
	function (a, b, c) {
		return {id: a, joke: b, categories: c};
	});
var _user$project$Main$responseDecoder = A2(
	_elm_lang$core$Json_Decode$at,
	_elm_lang$core$Native_List.fromArray(
		['value']),
	A4(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
		'categories',
		_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string),
		_elm_lang$core$Native_List.fromArray(
			[]),
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'joke',
			_elm_lang$core$Json_Decode$string,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'id',
				_elm_lang$core$Json_Decode$int,
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_user$project$Main$Response)))));
var _user$project$Main$FetchNewJoke = {ctor: 'FetchNewJoke'};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$input,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$type$('button'),
						_elm_lang$html$Html_Events$onClick(_user$project$Main$FetchNewJoke),
						_elm_lang$html$Html_Attributes$value('Fetch a joke')
					]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				A2(
				_elm_lang$html$Html$br,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				A2(
				_elm_lang$html$Html$h4,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text(
						A2(
							_elm_lang$core$Basics_ops['++'],
							'Joke #',
							_elm_lang$core$Basics$toString(model.id)))
					])),
				A2(
				_elm_lang$html$Html$p,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text(
						_jasonmahr$html_escape_sequences$Unicode$unEsc(model.joke))
					])),
				A2(
				_elm_lang$html$Html$p,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text(
						_elm_lang$core$Basics$toString(model.categories))
					]))
			]));
};
var _user$project$Main$Failure = function (a) {
	return {ctor: 'Failure', _0: a};
};
var _user$project$Main$Joke = function (a) {
	return {ctor: 'Joke', _0: a};
};
var _user$project$Main$fetchRandomJoke = function () {
	var url = 'http://api.icndb.com/jokes/random';
	var task = A2(_evancz$elm_http$Http$get, _user$project$Main$responseDecoder, url);
	var cmd = A3(_elm_lang$core$Task$perform, _user$project$Main$Failure, _user$project$Main$Joke, task);
	return cmd;
}();
var _user$project$Main$init = {ctor: '_Tuple2', _0: _user$project$Main$initModel, _1: _user$project$Main$fetchRandomJoke};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'Joke':
				return {ctor: '_Tuple2', _0: _p0._0, _1: _elm_lang$core$Platform_Cmd$none};
			case 'Failure':
				return {
					ctor: '_Tuple2',
					_0: {
						id: 0,
						joke: _elm_lang$core$Basics$toString(_p0._0),
						categories: _elm_lang$core$Native_List.fromArray(
							[])
					},
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: {
						id: 0,
						joke: 'Fetching joke...',
						categories: _elm_lang$core$Native_List.fromArray(
							[])
					},
					_1: _user$project$Main$fetchRandomJoke
				};
		}
	});
var _user$project$Main$main = {
	main: _elm_lang$html$Html_App$program(
		{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})
};
