var _user$project$Main$initModel = {
	users: {ctor: '[]'},
	name: '',
	age: '',
	message: ''
};
var _user$project$Main$init = {ctor: '_Tuple2', _0: _user$project$Main$initModel, _1: _elm_lang$core$Platform_Cmd$none};
var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$Model = F4(
	function (a, b, c, d) {
		return {users: a, name: b, age: c, message: d};
	});
var _user$project$Main$User = F4(
	function (a, b, c, d) {
		return {id: a, name: b, age: c, deleted: d};
	});
var _user$project$Main$Delete = function (a) {
	return {ctor: 'Delete', _0: a};
};
var _user$project$Main$userView = function (user) {
	var ageAsString = function () {
		var _p0 = user.age;
		if (_p0.ctor === 'Just') {
			return _elm_lang$core$Basics$toString(_p0._0);
		} else {
			return '-';
		}
	}();
	return A2(
		_elm_lang$html$Html$li,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						A2(
							_elm_lang$core$Basics_ops['++'],
							'ID: ',
							_elm_lang$core$Basics$toString(user.id))),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							A2(_elm_lang$core$Basics_ops['++'], 'Name: ', user.name)),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(
								A2(_elm_lang$core$Basics_ops['++'], 'Age: ', ageAsString)),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$input,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$type_('button'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$value('Delete'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onClick(
											_user$project$Main$Delete(user.id)),
										_1: {ctor: '[]'}
									}
								}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$Main$userListView = function (model) {
	var newList = A2(
		_elm_lang$core$List$filter,
		function (user) {
			return !_elm_lang$core$Native_Utils.eq(user.deleted, true);
		},
		model.users);
	return A2(
		_elm_lang$html$Html$ul,
		{ctor: '[]'},
		A2(
			_elm_lang$core$List$map,
			_user$project$Main$userView,
			A2(
				_elm_lang$core$List$sortBy,
				function (_) {
					return _.name;
				},
				newList)));
};
var _user$project$Main$InitNewUser = {ctor: 'InitNewUser'};
var _user$project$Main$AddNewUser = function (a) {
	return {ctor: 'AddNewUser', _0: a};
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p1 = msg;
		switch (_p1.ctor) {
			case 'InsertName':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{name: _p1._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'InsertAge':
				var _p5 = _p1._0;
				var newMessage = function () {
					var _p2 = _elm_lang$core$String$toInt(_p5);
					if (_p2.ctor === 'Err') {
						return 'Age must be a number!';
					} else {
						var _p3 = _p2._0;
						return (_elm_lang$core$Native_Utils.cmp(_p3, 100) > 0) ? 'Haha... that would be old' : ((_elm_lang$core$Native_Utils.cmp(_p3, 10) < 0) ? 'Pretty young.. hugh?' : 'accetable');
					}
				}();
				var newAge = function () {
					var _p4 = _elm_lang$core$String$toInt(_p5);
					if (_p4.ctor === 'Err') {
						return '';
					} else {
						return _elm_lang$core$Basics$toString(_p4._0);
					}
				}();
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{age: newAge, message: newMessage}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'InitNewUser':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: A2(
						_elm_lang$core$Random$generate,
						_user$project$Main$AddNewUser,
						A2(_elm_lang$core$Random$int, 1, 9999))
				};
			case 'AddNewUser':
				if (_elm_lang$core$String$isEmpty(model.name)) {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{message: 'Please give a name'}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					var ageAsInt = function () {
						var _p6 = _elm_lang$core$String$toInt(model.age);
						if (_p6.ctor === 'Err') {
							return _elm_lang$core$Maybe$Nothing;
						} else {
							return _elm_lang$core$Maybe$Just(_p6._0);
						}
					}();
					var newUser = A4(_user$project$Main$User, _p1._0, model.name, ageAsInt, false);
					var newUserList = {ctor: '::', _0: newUser, _1: model.users};
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{users: newUserList, name: '', age: '', message: ''}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			default:
				var newUserList = A2(
					_elm_lang$core$List$map,
					function (user) {
						return _elm_lang$core$Native_Utils.eq(user.id, _p1._0) ? _elm_lang$core$Native_Utils.update(
							user,
							{deleted: true}) : user;
					},
					model.users);
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{users: newUserList}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Main$InsertAge = function (a) {
	return {ctor: 'InsertAge', _0: a};
};
var _user$project$Main$InsertName = function (a) {
	return {ctor: 'InsertName', _0: a};
};
var _user$project$Main$view = function (model) {
	var deletedUsers = _elm_lang$core$List$length(
		A2(
			_elm_lang$core$List$filter,
			function (user) {
				return _elm_lang$core$Native_Utils.eq(user.deleted, true);
			},
			model.users));
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('wrapper'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h1,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						A2(
							_elm_lang$core$Basics_ops['++'],
							'We have ',
							A2(
								_elm_lang$core$Basics_ops['++'],
								_elm_lang$core$Basics$toString(
									_elm_lang$core$List$length(model.users)),
								A2(
									_elm_lang$core$Basics_ops['++'],
									' (deleted: ',
									A2(
										_elm_lang$core$Basics_ops['++'],
										_elm_lang$core$Basics$toString(deletedUsers),
										')'))))),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$form,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$input,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$type_('text'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$InsertName),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$placeholder('Name'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$value(model.name),
											_1: {ctor: '[]'}
										}
									}
								}
							},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$input,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$type_('text'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$InsertAge),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$placeholder('Age'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$value(model.age),
												_1: {ctor: '[]'}
											}
										}
									}
								},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$input,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$type_('button'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$InitNewUser),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$value('Add new user'),
												_1: {ctor: '[]'}
											}
										}
									},
									{ctor: '[]'}),
								_1: {ctor: '[]'}
							}
						}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(model.message),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: _user$project$Main$userListView(model),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$hr,
								{ctor: '[]'},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text(
											_elm_lang$core$Basics$toString(model)),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}
						}
					}
				}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
